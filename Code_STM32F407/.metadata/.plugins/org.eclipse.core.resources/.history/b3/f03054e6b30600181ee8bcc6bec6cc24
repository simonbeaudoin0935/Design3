#include "../../inc/Motor/Position.h"

#include "stm32f4xx.h"

typedef struct{
	int delta;
	int total;
}motor_count_t;


static motor_count_t motor_1_count;
static motor_count_t motor_2_count;
static motor_count_t motor_3_count;
static motor_count_t motor_4_count;


void position_compute_iteration(void){
	/*
	 * On lit la valeur du compteur à chaque itération pour trouver le déplacement de l'axe du moteur depuis
	 * la dernière itération
	 */
		uint16_t motor_1_tick = TIM1->CNT;
		TIM1->CNT = 32762;

		uint16_t motor_2_tick = TIM2->CNT;
		TIM2->CNT = 32762;

		uint16_t motor_3_tick = TIM3->CNT;
		TIM3->CNT = 32762;

		uint16_t motor_4_tick = TIM4->CNT;
		TIM4->CNT = 32762;

	/*
	 *	Compute the displacement of the motor by taking the difference from the motor counter value and the
	 *	reset value 32762
	 */
		motor_1_count.delta = (int)motor_1_count - 32762;
		motor_2_count.delta = (int)motor_2_count - 32762;
		motor_3_count.delta = (int)motor_3_count - 32762;
		motor_4_count.delta = (int)motor_4_count - 32762;

		motor_1_count.total += motor_1_count.delta;
		motor_2_count.total += motor_2_count.delta;
		motor_3_count.total += motor_3_count.delta;
		motor_4_count.total += motor_4_count.delta;
}

