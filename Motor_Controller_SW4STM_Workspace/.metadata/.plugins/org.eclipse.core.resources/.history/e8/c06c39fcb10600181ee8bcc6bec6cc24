#include "../../inc/Motor/Position.h"

#include "stm32f4xx.h"




motor_count_t motor_1_count;
motor_count_t motor_2_count;
motor_count_t motor_3_count;
motor_count_t motor_4_count;



/*
 * Get the value of the counter of each motor and then resets the value of the counter
 * to 32762, which is the max value of 16 bit number in half, so that we don't have to
 * bother with the condition of the counter value overflowing at 65 535 or underflowing
 * at 0.
 * The motor would have to run way too fast to even get close to reach 0 or 65535 from one iteration
 * to the next.
 */
	uint16_t motor_1_count = TIM1->CNT;
	TIM1->CNT = 32762;

	uint16_t motor_2_count = TIM2->CNT;
	TIM2->CNT = 32762;

	uint16_t motor_3_count = TIM3->CNT;
	TIM3->CNT = 32762;

	uint16_t motor_4_count = TIM4->CNT;
	TIM4->CNT = 32762;

/*
 *	Compute the displacement of the motor by taking the difference from the motor counter value and the
 *	reset value 32762
 */
	motor_1_count_diff = (int)motor_1_count - 32762;
	motor_2_count_diff = (int)motor_2_count - 32762;
	motor_3_count_diff = (int)motor_3_count - 32762;
	motor_4_count_diff = (int)motor_4_count - 32762;
