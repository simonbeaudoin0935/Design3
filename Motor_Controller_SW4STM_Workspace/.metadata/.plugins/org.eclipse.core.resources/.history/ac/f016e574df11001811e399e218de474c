#ifndef PID_H
#define PID_H

typedef enum{
	X = 0x01,
	Y = 0x02,
	R = 0x03
}type_deplacement;

typedef struct{

	float consigne_position;			//Input

	float position;
	float position_old;


	float erreur_position;
	float erreur_position_old;

	float integral_position;

	float consigne_vitesse;				//Output
	float consigne_vitesse_old;

}PID_Position_t;


typedef struct{



	float vitesse;
	float vitesse_old;

	float erreur_vitesse;
	float erreur_vitesse_old;
	float integral_vitesse;

	float pid_output;

}PID_Vitesse_t;

extern PID_Vitesse_t PID_1, PID_2, PID_3, PID_4;
extern type_deplacement g_typeDeplacement;

void PID_resetAll(void);
void PID_computeAll(void);

void PID_1_reset(void);
void PID_2_reset(void);
void PID_3_reset(void);
void PID_4_reset(void);

void PID_Position_X_Compute(void);
void PID_Position_Y_Compute(void);
void PID_Position_R_Compute(void);

void PID_1_compute(void);
void PID_2_compute(void);
void PID_3_compute(void);
void PID_4_compute(void);


#endif //PID_H
